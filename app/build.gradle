apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
android {
    compileSdkVersion 28
    dataBinding {
        enabled true
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    defaultConfig {
        applicationId "com.hwqgooo.databinding"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "${getGitVersion()}"
        buildConfigField "String", "GIT_REVISION", "\"${getGitVersion()}\""
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "xiaomi"
    productFlavors {
//        develop {}
        xiaomi {
            dimension "xiaomi"
        }
//        huawei {}
//        anzhi {}
    }
    //修改生成的apk名字
    applicationVariants.all { variant ->
//        variant.outputs.each { output ->
//            def oldFile = output.outputFile
////            if (variant.buildType.name.equals('release')) {
//            def releaseApkName = 'girl.' + variant.productFlavors[0].name + "." + defaultConfig.versionName + ".${getReleaseApkName()}" + '.apk'
//            output.outputFile = new File(oldFile.parent, releaseApkName)
////            }
//        }
        variant.outputs.all {
            def releaseApkName = 'girl.' + variant.productFlavors[0].name + "." + defaultConfig.versionName + ".${getReleaseApkName()}" + '.apk'
            outputFileName = releaseApkName
        }
    }
    aaptOptions {
        noCompress "tflite"
        noCompress "lite"
    }
}


def getReleaseApkName() {
    return ""
//    return "${releaseTime()}"
}


def releaseTime() {
    return ""
//    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

def getGitVersion() {
    return '1.0'
//    return 'git rev-parse --short HEAD'.execute().text.trim()
}

allprojects {
    repositories {
        google()
        maven { url "https://jitpack.io" }
    }
}

buildscript {
    repositories {
        jcenter()
        google()
        mavenCentral() // add repository
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.1'
        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.2' // add plugin
    }
}

// In your app projects build.gradle file:
apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao' // apply plugin

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'org.jsoup:jsoup:1.9.2'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:animated-vector-drawable:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:palette-v7:28.0.0'
    /*recyclerview分隔符*/
    implementation 'com.yqritc:recyclerview-flexibledivider:1.2.9'
    /*retrofit及格式转换*/
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    /*图片加载库*/
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    implementation 'com.github.chrisbanes:PhotoView:1.3.0'
    /*rxjava*/
//    implementation 'io.reactivex:rxandroid:1.2.1'
//    implementation 'io.reactivex:rxjava:1.3.0'

    implementation "android.arch.lifecycle:extensions:1.1.1"

    implementation 'io.reactivex.rxjava2:rxjava:2.2.2'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'

    /* 圆形imageview */
//    compile 'de.hdodenhof:circleimageview:2.0.0'
    /* 打标签库 */
    implementation 'me.gujun.android.taggroup:library:1.4@aar'
    implementation 'com.github.lawloretienne:discreteslider:0.0.6'
    //
//    compile 'me.tatarka.bindingcollectionadapter:bindingcollectionadapter:1.2.0'
//    compile 'me.tatarka.bindingcollectionadapter:bindingcollectionadapter-recyclerview:1.2.0'
    /* leakcanary */
//    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
//    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
//    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    /* sql */
    implementation 'org.greenrobot:greendao:3.2.2'

    // Glimpse A content-aware cropping library for Android.
    implementation 'com.github.the-super-toys.glimpse-android:glimpse-core:0.0.3'
    // only required for glide extensions
    implementation 'com.github.the-super-toys.glimpse-android:glimpse-glide:0.0.3'
    implementation 'org.tensorflow:tensorflow-lite:0.0.0-nightly'
    implementation 'com.google.android:flexbox:1.0.0'
//    def paging_version = "1.0.1"
    implementation "android.arch.paging:runtime:1.0.1"
    implementation "android.arch.paging:rxjava2:1.0.1"
}
